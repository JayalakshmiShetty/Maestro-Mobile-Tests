# .github/workflows/maestro-tests.yaml
name: Maestro UI Testing

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Install Maestro CLI
      - name: Install and Verify Maestro CLI
        run: |
          # Install Maestro CLI
          curl -Ls "https://get.maestro.mobile.dev" | bash
          
          # Add Maestro to PATH
          echo 'export PATH="$PATH:$HOME/.maestro/bin"' >> $GITHUB_ENV
          
          # Verify Maestro installation
          maestro --version || echo "Maestro installation failed"

      # Step 5: Set up and run Android Emulator
      - name: Setup AVD
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          disable-animations: true
          disable-boot-animation: true
          force-avd-creation: true
          emulator-options: "-no-accel -gpu swiftshader_indirect"
      
      # Step 6: Wait for Emulator to fully boot up and ensure adb is connected
      - name: Start adb server and Wait for Emulator
        run: |
          adb start-server
          adb devices
          
          # Wait until the emulator is fully booted
          boot_completed=""
          retry=0
          until [[ "$boot_completed" =~ "1" ]]; do
            boot_completed=$(adb -s emulator-5554 shell getprop sys.boot_completed 2>&1)
            echo "Waiting for emulator to boot..."
            sleep 5
            retry=$((retry + 1))
            if [ "$retry" -gt 30 ]; then
              echo "Emulator boot timed out!"
              exit 1
            fi
          done
          echo "Emulator booted successfully!"

      # Step 7: Run Maestro Tests
      - name: Run Maestro Tests
        run: |
          # Add Maestro to PATH in this step's shell session
          export PATH="$PATH:$HOME/.maestro/bin"
          
          # Run Maestro tests
          maestro --device emulator-5554 test -e APP_ID=com.google.android.calculator --format junit --debug-output debug-logs/ android/tests
        continue-on-error: false

      # Step 8: Upload Test Report
      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: debug-logs/
          retention-days: 30
